(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[64252],{64252:n=>{n.exports="import {Component} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport type {TuiContext, TuiIdentityMatcher, TuiStringHandler} from '@taiga-ui/cdk';\nimport {TuiDataListDirective} from '@taiga-ui/core';\nimport {TuiSelectModule} from '@taiga-ui/legacy';\n\nimport {CustomListComponent} from './custom-list';\n\nconst INCOME = {\n    name: 'Income',\n    items: [\n        'Donations',\n        'Product placement',\n        'Sponsorship',\n        'Found on the street',\n        'Unexpected inheritance',\n        'Investments',\n        'Color copier',\n    ],\n};\n\nconst EXPENSES = {\n    name: 'Expenses',\n    items: [\n        'Energy drinks',\n        'Coffee',\n        'Ramen',\n        'Bills',\n        'Back medicine',\n        'Warhammer 40000 figurines',\n    ],\n};\n\n@Component({\n    standalone: true,\n    exportAs: \"ExampleComponent4\",\n    imports: [TuiSelectModule, FormsModule, CustomListComponent, TuiDataListDirective],\n    templateUrl: './index.html',\n    styles: [\n        `\n            .control {\n                width: 320px;\n            }\n        `,\n    ],\n    encapsulation,\n    changeDetection,\n})\nexport default class ExampleComponent {\n    protected value = [];\n\n    protected readonly items = [INCOME, EXPENSES];\n\n    protected readonly identityMatcher: TuiIdentityMatcher<readonly string[]> = (\n        items1,\n        items2,\n    ) => items1.length === items2.length && items1.every(item => items2.includes(item));\n\n    protected readonly valueContent: TuiStringHandler<TuiContext<readonly string[]>> = ({\n        $implicit,\n    }) => {\n        if (!$implicit.length) {\n            return 'All';\n        }\n\n        const selected = this.items.find(({items}) =>\n            this.identityMatcher($implicit, items),\n        );\n\n        return selected ? `${selected.name} only` : `Selected: ${$implicit.length}`;\n    };\n}\n"}}]);