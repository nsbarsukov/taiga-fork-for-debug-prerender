"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1442],{1442:e=>{e.exports="import {DestroyRef, inject, Injectable} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {TUI_DEFAULT_MATCHER} from '@taiga-ui/cdk';\nimport type {Observable} from 'rxjs';\nimport {\n    delay,\n    distinctUntilChanged,\n    of,\n    shareReplay,\n    startWith,\n    Subject,\n    switchMap,\n} from 'rxjs';\n\nimport {databaseMockData} from './database-mock-data';\nimport type {User} from './user';\n\n@Injectable()\nexport class RequestService {\n    private readonly destroyRef = inject(DestroyRef);\n    private readonly request$ = new Subject<string>();\n\n    // Imitating server request with switchMap + delay pair\n    private readonly response$ = this.request$.pipe(\n        distinctUntilChanged(),\n        switchMap(query =>\n            of(databaseMockData.filter(user => TUI_DEFAULT_MATCHER(user, query))).pipe(\n                delay(Math.random() * 1000 + 500),\n                startWith(null),\n            ),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n        shareReplay({bufferSize: 1, refCount: true}),\n    );\n\n    public request(query: string | null): Observable<readonly User[] | null> {\n        this.request$.next(query || '');\n\n        return this.response$;\n    }\n}\n"}}]);