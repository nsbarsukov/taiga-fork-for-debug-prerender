"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[37511],{37511:e=>{e.exports="import {Component} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {\n    TuiButtonDirective,\n    TuiDropdownDirective,\n    TuiDropdownOpenDirective,\n} from '@taiga-ui/core';\nimport {TuiChevronDirective, TuiDataListWrapper} from '@taiga-ui/kit';\nimport {TuiMultiSelectModule} from '@taiga-ui/legacy';\n\n@Component({\n    standalone: true,\n    exportAs: \"ExampleComponent4\",\n    imports: [\n        ReactiveFormsModule,\n        TuiButtonDirective,\n        TuiDropdownDirective,\n        TuiDropdownOpenDirective,\n        TuiChevronDirective,\n        TuiDataListWrapper,\n        TuiMultiSelectModule,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class ExampleComponent {\n    protected readonly form = new FormGroup({\n        control: new FormControl<string[]>([]),\n    });\n\n    protected open = false;\n\n    protected readonly items = ['Drafts', 'In Progress', 'Completed'];\n\n    protected get length(): number {\n        return this.value.length || 0;\n    }\n\n    protected get text(): string {\n        switch (this.length) {\n            case 0:\n                return 'Select';\n            case 1:\n                return this.value[0];\n            default:\n                return `${this.length} selected`;\n        }\n    }\n\n    private get value(): readonly string[] {\n        return this.form.get('control')?.value || [];\n    }\n}\n"}}]);