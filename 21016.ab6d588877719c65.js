"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[21016],{21016:e=>{e.exports="import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport type {TuiHandler} from '@taiga-ui/cdk';\nimport {EMPTY_ARRAY} from '@taiga-ui/cdk';\nimport {TuiButtonDirective} from '@taiga-ui/core';\nimport {TuiTree} from '@taiga-ui/kit';\n\ninterface TreeNode {\n    readonly children?: readonly TreeNode[];\n    readonly text: string;\n}\n\n@Component({\n    standalone: true,\n    exportAs: \"ExampleComponent4\",\n    imports: [TuiTree, TuiButtonDirective],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class ExampleComponent {\n    protected readonly data: TreeNode = {\n        text: 'Topmost',\n        children: [\n            {\n                text: 'Top level 1',\n                children: [\n                    {\n                        text: 'Another item',\n                        children: [\n                            {text: 'Next level 1'},\n                            {text: 'Next level 2'},\n                            {text: 'Next level 3'},\n                        ],\n                    },\n                ],\n            },\n            {text: 'Top level 2'},\n            {\n                text: 'Top level 3',\n                children: [{text: 'Test 1'}, {text: 'Test 2'}],\n            },\n        ],\n    };\n\n    protected readonly map = new Map<TreeNode, boolean>();\n\n    protected readonly handler: TuiHandler<TreeNode, readonly TreeNode[]> = item =>\n        item.children || EMPTY_ARRAY;\n\n    protected toggleTopmost(): void {\n        this.map.set(this.data, !this.map.get(this.data));\n    }\n\n    protected toggleLevel(index: number): void {\n        const nodes: readonly TreeNode[] = this.data.children || [];\n\n        this.map.set(nodes[index], !this.map.get(nodes[index]));\n    }\n}\n"}}]);