(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[10189],{10189:e=>{e.exports="import {Component, inject} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAlertService, TuiButtonDirective} from '@taiga-ui/core';\nimport type {Observable} from 'rxjs';\nimport {mergeAll, Subject} from 'rxjs';\n\nconst MAX_CONCURRENT = 3;\n\n@Component({\n    standalone: true,\n    exportAs: \"ExampleComponent7\",\n    imports: [TuiButtonDirective],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class ExampleComponent {\n    private readonly alerts = inject(TuiAlertService);\n    private readonly queue$ = new Subject<Observable<unknown>>();\n    private i = 0;\n\n    constructor() {\n        this.queue$.pipe(mergeAll(MAX_CONCURRENT), takeUntilDestroyed()).subscribe();\n    }\n\n    protected showNotification(): void {\n        this.queue$.next(\n            this.alerts.open(\n                `It is impossible to show more than ${MAX_CONCURRENT} alerts concurrently!<br/>` +\n                    `<strong>Index: ${this.i++}</strong>`,\n                {label: 'Use power of RxJS!'},\n            ),\n        );\n    }\n}\n"}}]);