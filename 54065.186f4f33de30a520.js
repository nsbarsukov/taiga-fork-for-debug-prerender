"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[54065],{54065:e=>{e.exports="import {Component, DestroyRef, inject} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {\n    TuiButtonDirective,\n    TuiDialogService,\n    TuiHintOptionsDirective,\n    TuiSvgComponent,\n    TuiTextfieldOptionsDirective,\n} from '@taiga-ui/core';\nimport {TuiInputNumberModule, TuiTextfieldControllerModule} from '@taiga-ui/legacy';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\n\nimport {PayModalComponent} from './pay-modal/pay-modal.component';\n\n@Component({\n    standalone: true,\n    exportAs: \"ExampleComponent9\",\n    imports: [\n        TuiInputNumberModule,\n        ReactiveFormsModule,\n        TuiTextfieldOptionsDirective,\n        TuiTextfieldControllerModule,\n        TuiHintOptionsDirective,\n        TuiButtonDirective,\n        TuiSvgComponent,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class ExampleComponent {\n    private readonly dialogs = inject(TuiDialogService);\n    private readonly destroyRef = inject(DestroyRef);\n\n    protected readonly amountControl = new FormControl(100);\n\n    protected payByCard(): void {\n        this.dialogs\n            .open(new PolymorpheusComponent(PayModalComponent), {\n                size: 'auto',\n                closeable: true,\n                data: {\n                    amount: this.amountControl.value,\n                },\n            })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe();\n    }\n}\n"}}]);