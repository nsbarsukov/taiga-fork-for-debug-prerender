(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[23134],{23134:n=>{n.exports="import {AsyncPipe} from '@angular/common';\nimport {Component, inject} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiPanDirective} from '@taiga-ui/cdk';\nimport {BehaviorSubject, map} from 'rxjs';\n\n@Component({\n    standalone: true,\n    exportAs: \"ExampleComponent1\",\n    imports: [TuiPanDirective, AsyncPipe],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class ExampleComponent {\n    private readonly sanitizer = inject(DomSanitizer);\n\n    protected readonly coordinates$ = new BehaviorSubject([0, 0]);\n\n    protected readonly transform$ = this.coordinates$.pipe(\n        map(coords =>\n            this.sanitizer.bypassSecurityTrustStyle(\n                `translate(${coords[0]}px, ${coords[1]}px)`,\n            ),\n        ),\n    );\n\n    protected get currentCoords(): number[] {\n        return this.coordinates$.value;\n    }\n\n    protected onPan(delta: readonly [number, number]): void {\n        this.coordinates$.next([\n            this.currentCoords[0] + delta[0],\n            this.currentCoords[1] + delta[1],\n        ]);\n    }\n}\n"}}]);