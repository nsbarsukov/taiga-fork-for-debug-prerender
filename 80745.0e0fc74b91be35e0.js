(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[80745],{80745:(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var a=n(66094),o=n(39908),s=n(35548),r=n(28598),u=n(29655);const p=(()=>{var e;class t{constructor(){this.testForm=new a.cw({testValue1:new a.NI("A field",a.kI.required),testValue2:new a.NI("This one can be expanded",a.kI.required)})}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=s.Xpm({type:e,selectors:[["ng-component"]],standalone:!0,exportAs:"ExampleComponent1",features:[s.jDz],decls:7,vars:2,consts:[[3,"formGroup"],["formControlName","testValue1"],["formControlName","testValue2",1,"tui-space_top-4",3,"expandable"]],template:function(e,t){1&e&&(s.TgZ(0,"p"),s._uU(1," It has a fixed size and content scroll by default. But there is also an expandable mode with height increase from content inside\n"),s.qZA(),s.TgZ(2,"form",0)(3,"tui-textarea",1),s._uU(4,"Type a text"),s.qZA(),s.TgZ(5,"tui-textarea",2),s._uU(6," Type a text "),s.qZA()()),2&e&&(s.xp6(2),s.Q6J("formGroup",t.testForm),s.xp6(3),s.Q6J("expandable",!0))},dependencies:[a.UX,a._Y,a.JJ,a.JL,a.sg,a.u,o.MuE,r.FC,u.B],encapsulation:2,changeDetection:0}),t})()}}]);